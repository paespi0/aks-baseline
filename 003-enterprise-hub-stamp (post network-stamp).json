{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "0.0.0.4",
    "parameters": {
        "location": {
            "type": "string",
            "allowedValues": [
                "centralus",
                "eastus",
                "eastus2",
                "westus2",
                "francecentral",
                "northeurope",
                "uksouth",
                "westeurope",
                "japaneast",
                "southeastasia"
            ],
            "metadata": {
                "description": "The location in which the resources should be deployed."
            }
        },
        "hubVnetName": {
            "type": "string",
            "metadata": {
                "description": "Virtual netwotk name."
            }
        },
        "hubVnetAddressRange": {
            "defaultValue": "192.168.0.0/20",
            "type": "string"
        },
        "azureFirewallSubnetRange": {
            "defaultValue": "192.168.1.0/26",
            "type": "string"
        },
        "defaultFwPipName": {
            "defaultValue": "pip-fw-default",
            "type": "string"
        },
        "hubFwName": {
            "defaultValue": "fw-hub",
            "type": "string"
        },
        "hubLaBaseName": {
            "defaultValue": "la-networking-hub",
            "type": "string"
        },
        "aksIpGroupName": {
            "defaultValue": "ipg-AksNodepools",
            "type": "string"
        },
        "vnetNodepoolSubnetNameResourceId": {
            "type": "string"
        }
    },
    "variables": {
        "hubLaName": "[concat(parameters('hubLaBaseName'),'-', uniqueString(subscription().id, resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[parameters('hubVnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('hubVnetAddressRange')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "AzureFirewallSubnet",
                        "properties": {
                            "addressPrefix": "[parameters('azureFirewallSubnetRange')]",
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.ContainerRegistry"
                                }
                            ]
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIpAddresses",
            "name": "[parameters('defaultFwPipName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "publicIPAddressVersion": "IPv4"
            }
        },
        {
            "type": "Microsoft.Network/ipGroups",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "name": "[parameters('aksIpGroupName')]",
            "properties": {
                "ipAddresses": [
                    "[reference(parameters('vnetNodepoolSubnetNameResourceId'), '2019-11-01').addressPrefix]"
                ]
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls",
            "apiVersion": "2019-11-01",
            "name": "[parameters('hubFwName')]",
            "location": "[parameters('location')]",
            "zones": [
                "1",
                "2",
                "3"
            ],
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIpAddresses', parameters('defaultFwPipName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]",
                "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
            ],
            "properties": {
                "sku": {
                    "name": "AZFW_VNet",
                    "tier": "Standard"
                },
                "threatIntelMode": "Alert",
                "ipConfigurations": [
                    {
                        "name": "[parameters('defaultFwPipName')]",
                        "properties": {
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('hubVnetName'), 'AzureFirewallSubnet')]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('defaultFwPipName'))]"
                            }
                        }
                    }
                ],
                "natRuleCollections": [
                ],
                "networkRuleCollections": [
                    {
                        "name": "org-wide-allowed",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 100,
                            "rules": [
                                {
                                    "name": "DNS",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ],
                                    "destinationPorts": [
                                        "53"
                                    ]
                                },
                                {
                                    "name": "ntp",
                                    "description": "Network Time Protocol (NTP) time synchronization",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationPorts": [
                                        "123"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "HTTP-and-HTTPS",
                                    "sourceAddresses": [
                                        "*"
                                    ],
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "destinationPorts": [
                                        "80",
                                        "443"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "AKS-Global-Requirements",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                                {
                                    "name": "tunnel-front-pod-tcp",
                                    "description": "Tunnel front pod to communicate with the tunnel end on the API server.  Technically only needed to our API servers.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        "TCP"
                                    ],
                                    "destinationPorts": [
                                        "22",
                                        "9000"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ]
                                },
                                {
                                    "name": "tunnel-front-pod-udp",
                                    "description": "Tunnel front pod to communicate with the tunnel end on the API server.  Technically only needed to our API servers.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        "UDP"
                                    ],
                                    "destinationPorts": [
                                        "1194"
                                    ],
                                    "destinationAddresses": [
                                        "*"
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "applicationRuleCollections": [
                    {
                        "name": "AKS-Global-Requirements",
                        "properties": {
                            "action": {
                                "type": "Allow"
                            },
                            "priority": 200,
                            "rules": [
                                {
                                    "name": "nodes-to-api-server",
                                    "description": "This address is required for Node <-> API server communication.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.hcp.eastus2.azmk8s.io",
                                        "*.tun.eastus2.azmk8s.io"
                                    ]
                                },
                                {
                                    "name": "microsoft-container-registry",
                                    "description": "All URLs related to MCR needed by AKS",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "*.cdn.mscr.io",
                                        "mcr.microsoft.com",
                                        "*.data.mcr.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "management-plane",
                                    "description": "This address is required for Kubernetes GET/PUT operations.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "management.azure.com"
                                    ]
                                },
                                {
                                    "name": "aad-auth",
                                    "description": "This address is required for Azure Active Directory authentication.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "login.microsoftonline.com"
                                    ]
                                },
                                {
                                    "name": "apt-get",
                                    "description": "This address is the Microsoft packages repository used for cached apt-get operations. Example packages include Moby, PowerShell, and Azure CLI.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "packages.microsoft.com"
                                    ]
                                },
                                {
                                    "name": "cluster-binaries",
                                    "description": "This address is for the repository required to install required binaries like kubenet and Azure CNI.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "acs-mirror.azureedge.net"
                                    ]
                                },
                                {
                                    "name": "ubuntu-security-patches",
                                    "description": "This address lets the Linux cluster nodes download the required security patches and updates.",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Http",
                                            "port": 80
                                        }
                                    ],
                                    "targetFqdns": [
                                        "security.ubuntu.com",
                                        "azure.archive.ubuntu.com",
                                        "changelogs.ubuntu.com"
                                    ]
                                },
                                {
                                    "name": "azure-monitor",
                                    "description": "All required for Azure Monitor for containers per https://docs.microsoft.com/en-us/azure/aks/limit-egress-traffic#required-addresses-and-ports-with-azure-monitor-for-containers-enabled",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "dc.services.visualstudio.com",
                                        "*.ods.opinsights.azure.com",
                                        "*.oms.opinsights.azure.com",
                                        "*.microsoftonline.com",
                                        "*.monitoring.azure.com"
                                    ]
                                },
                                {
                                    "name": "azure-policy",
                                    "description": "All required for Azure Policy per https://docs.microsoft.com/en-us/azure/aks/limit-egress-traffic#required-addresses-and-ports-for-aks-clusters-with-azure-policy-in-public-preview-enabled",
                                    "sourceIpGroups": [
                                        "[resourceId('Microsoft.Network/ipGroups', parameters('aksIpGroupName'))]"
                                    ],
                                    "protocols": [
                                        {
                                            "protocolType": "Https",
                                            "port": 443
                                        }
                                    ],
                                    "targetFqdns": [
                                        "gov-prod-policy-data.trafficmanager.net",
                                        "raw.githubusercontent.com",
                                        "*.gk.eastus2.azmk8s.io",
                                        "*.microsoftonline.com",
                                        "dc.services.visualstudio.com"
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2015-11-01-preview",
            "name": "[variables('hubLaName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30
            }
        },
        {
            "type": "Microsoft.Network/azureFirewalls/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(parameters('hubFwName'), '/Microsoft.Insights/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "[resourceId('Microsoft.Network/azureFirewalls', parameters('hubFwName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "logs": [
                    {
                        "category": "AzureFirewallApplicationRule",
                        "enabled": true
                    },
                    {
                        "category": "AzureFirewallNetworkRule",
                        "enabled": true
                    }
                ],
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/providers/diagnosticSettings",
            "apiVersion": "2017-05-01-preview",
            "name": "[concat(parameters('hubVnetName'), '/Microsoft.Insights/default')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]"
            ],
            "properties": {
                "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
                "metrics": [
                    {
                        "category": "AllMetrics",
                        "enabled": true
                    }
                ]
            }
        }
    ],
    "outputs": {
        "hubLaResourceId": {
            "value": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('hubLaName'))]",
            "type": "string"
        },
        "hubVnetId": {
            "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('hubVnetName'))]",
            "type": "string"
        },
        "firewallName": {
            "value": "[parameters('hubFwName')]",
            "type": "string"
        }
    }
}